{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FSA\\\\Phase 2\\\\router\\\\src\\\\components\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost(_ref) {\n  _s();\n  let {\n    token\n  } = _ref;\n  const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\";\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(true);\n  async function createPosts(event) {\n    event.preventDefault();\n    try {\n      const response = await fetch(`${BASE}/posts`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          post: {\n            title: title,\n            description: description,\n            price: price,\n            willDeliver: true\n          }\n        })\n      });\n      let result = await response.json();\n      console.log(result);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    //create a login form \n    _jsxDEV(\"form\", {\n      onSubmit: event => createPosts(event),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(CreatePost, \"wDJndtR8mohtrDlzU4bpHQXPaU8=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","useEffect","CreatePost","token","BASE","title","setTitle","description","setDescription","price","setPrice","willDeliver","setWillDeliver","createPosts","event","preventDefault","response","fetch","headers","method","body","JSON","stringify","post","result","json","console","log","err","target","value"],"sources":["C:/Users/User/Desktop/FSA/Phase 2/router/src/components/CreatePost.js"],"sourcesContent":["import {useState,useEffect} from \"react\";\r\n\r\nexport default function CreatePost({token}){\r\n    const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\"\r\n    const[title,setTitle]=useState(\"\")\r\n    const[description,setDescription]=useState(\"\")\r\n    const[price,setPrice]=useState(\"\")\r\n    const[willDeliver,setWillDeliver]=useState(true)\r\n\r\n\r\n\r\n    \r\n        async function createPosts(event){\r\n            event.preventDefault()\r\n             try{\r\n                 const response = await fetch(`${BASE}/posts`,{\r\n\r\n                     headers:{\r\n                         'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`\r\n                         },\r\n                         method:\"POST\",\r\n                         body: JSON.stringify({\r\n                            post: {\r\n                              title: title,\r\n                              description: description,\r\n                              price: price,\r\n                              willDeliver: true\r\n                            }})\r\n\r\n                    })\r\n\r\n                    let result = await response.json()\r\n                    console.log(result)\r\n                \r\n             }catch(err){\r\n                 console.log(err)\r\n             }\r\n         }\r\n   \r\n    \r\n  \r\n\r\n     return(\r\n        //create a login form \r\n        <form onSubmit={(event)=>createPosts(event)}>\r\n            <label>Title:</label>\r\n            <input type=\"text\" value={title} onChange=\r\n            {(event)=>setTitle(event.target.value)}></input>\r\n\r\n            <label>Description:</label>\r\n            <input type=\"text\" value={description} onChange=\r\n            {(event)=>setDescription(event.target.value)}></input>\r\n\r\n            <label>Price:</label>\r\n            <input type=\"text\" value={price} onChange=\r\n            {(event)=>setPrice(event.target.value)}></input>\r\n\r\n            {/* <label>Will Deliver?</label>\r\n            <input type=\"checkbox\" value={willDeliver} onChange=\r\n            {(event)=>setWillDeliver(event.target.value)}></input> */}\r\n            <button type=\"submit\">submit</button>\r\n        </form>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC;AAEzC,eAAe,SAASC,UAAU,OAAS;EAAA;EAAA,IAAR;IAACC;EAAK,CAAC;EACtC,MAAMC,IAAI,GAAG,+DAA+D;EAC5E,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACO,WAAW,EAACC,cAAc,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAK,CAACS,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACW,WAAW,EAACC,cAAc,CAAC,GAACZ,QAAQ,CAAC,IAAI,CAAC;EAK5C,eAAea,WAAW,CAACC,KAAK,EAAC;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACrB,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,IAAK,QAAO,EAAC;QAEzCc,OAAO,EAAC;UACJ,cAAc,EAAE,kBAAkB;UAC/B,eAAe,EAAG,UAASf,KAAM;QACpC,CAAC;QACDgB,MAAM,EAAC,MAAM;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAClBC,IAAI,EAAE;YACJlB,KAAK,EAAEA,KAAK;YACZE,WAAW,EAAEA,WAAW;YACxBE,KAAK,EAAEA,KAAK;YACZE,WAAW,EAAE;UACf;QAAC,CAAC;MAEV,CAAC,CAAC;MAEF,IAAIa,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAE1B,CAAC,QAAMI,GAAG,EAAC;MACPF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IACpB;EACJ;EAKJ;IAAA;IACG;IACA;MAAM,QAAQ,EAAGd,KAAK,IAAGD,WAAW,CAACC,KAAK,CAAE;MAAA,wBACxC;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAET,KAAM;QAAC,QAAQ,EACvCS,KAAK,IAAGR,QAAQ,CAACQ,KAAK,CAACe,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAEhD;QAAA,UAAO;MAAY;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEvB,WAAY;QAAC,QAAQ,EAC7CO,KAAK,IAAGN,cAAc,CAACM,KAAK,CAACe,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAEtD;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAErB,KAAM;QAAC,QAAQ,EACvCK,KAAK,IAAGJ,QAAQ,CAACI,KAAK,CAACe,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAKhD;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC;AAGf;AAAC,GA/DuB5B,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}