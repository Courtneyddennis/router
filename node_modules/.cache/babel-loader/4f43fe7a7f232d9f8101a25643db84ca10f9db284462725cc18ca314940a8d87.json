{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FSA\\\\Phase 2\\\\router\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Posts(_ref) {\n  _s();\n  let {\n    token\n  } = _ref;\n  // return <div>Posts</div>\n  const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\";\n  const [posts, setPosts] = useState([]);\n  const [messages, setMessages] = useState(\"\");\n  useEffect(() => {\n    async function getPosts() {\n      try {\n        const response = await fetch(`${BASE}/posts`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        let result = await response.json();\n        console.log(result);\n        setPosts(result.data.posts);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getPosts();\n  }, []);\n  async function deletePosts(postId) {\n    try {\n      const response = await fetch(`${BASE}/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      let result = await response.json();\n      console.log(result);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function sendMessages(event, postId) {\n    event.preventDefault();\n    try {\n      const response = await fetch(`${BASE}/posts`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          message: {\n            title: title,\n            description: description,\n            price: price,\n            willDeliver: willDeliver\n          }\n        })\n      });\n      let result = await response.json();\n      console.log(result);\n      navigate('/Posts', {\n        replace: true\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"CreatePost\",\n      children: \"Create A Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), !post.isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messages,\n              onChange: event => setMessages(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setPostId(post._id),\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => deletePosts(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(Posts, \"JT/TlkMMlGbCK4C+XmaKInNgiYw=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Link","Posts","token","BASE","posts","setPosts","messages","setMessages","getPosts","response","fetch","headers","result","json","console","log","data","err","deletePosts","postId","method","sendMessages","event","preventDefault","body","JSON","stringify","message","title","description","price","willDeliver","navigate","replace","map","post","isAuthor","target","value","setPostId","_id"],"sources":["C:/Users/User/Desktop/FSA/Phase 2/router/src/components/Posts.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Posts({ token }) {\r\n    // return <div>Posts</div>\r\n    const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\"\r\n    const [posts, setPosts] = useState([])\r\n    const[messages,setMessages]=useState(\"\")\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function getPosts() {\r\n            try {\r\n                const response = await fetch(`${BASE}/posts`, {\r\n\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                })\r\n                let result = await response.json()\r\n                console.log(result)\r\n                setPosts(result.data.posts);\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getPosts()\r\n\r\n    }, [])\r\n\r\n\r\n    async function deletePosts(postId) {\r\n        try {\r\n            const response = await fetch(`${BASE}/posts/${postId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            let result = await response.json();\r\n            console.log(result)\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async function sendMessages(event,postId){\r\n        event.preventDefault()\r\n         try{\r\n             const response = await fetch(`${BASE}/posts`,{\r\n\r\n                 headers:{\r\n                     'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                     },\r\n                     method:\"POST\",\r\n                     body: JSON.stringify({\r\n                        message: {\r\n                          title: title,\r\n                          description: description,\r\n                          price: price,\r\n                          willDeliver: willDeliver\r\n                        }})\r\n\r\n                })\r\n\r\n                let result = await response.json()\r\n                console.log(result)\r\n                navigate('/Posts', {replace: true})\r\n            \r\n         }catch(err){\r\n             console.log(err)\r\n         }\r\n     }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Link to=\"CreatePost\">Create A Listing</Link>\r\n            <>\r\n\r\n                {posts.map(post => {\r\n\r\n                    return (\r\n                        <div key={post._id} className=\"card\">\r\n                            <div>{post.title}</div>\r\n                            <div>{post.description}</div>\r\n                            <div>{post.price}</div>\r\n\r\n                            {!post.isAuthor ?\r\n                                <>\r\n                                    <label>Message:</label>\r\n                                    <input type=\"text\" value={messages} onChange=\r\n                                        {(event) => setMessages(event.target.value)}></input>\r\n                                    <button type=\"button\" onClick={() => setPostId(post._id)}>Message</button>\r\n                                </>\r\n                                :\r\n\r\n                                <button type=\"button\" onClick={() => deletePosts(post._id)}>Delete</button>\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n            </>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}