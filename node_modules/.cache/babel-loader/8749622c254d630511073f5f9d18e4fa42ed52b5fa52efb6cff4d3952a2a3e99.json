{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FSA\\\\Phase 2\\\\router\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Posts(_ref) {\n  _s();\n  let {\n    token\n  } = _ref;\n  // return <div>Posts</div>\n  const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\";\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      try {\n        const response = await fetch(`${BASE}/posts`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        let result = await response.json();\n        console.log(result);\n        setPosts(result.data.posts);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getPosts();\n  }, []);\n  async function deletePosts(postId) {\n    try {\n      const response = await fetch(`${BASE}/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      let result = await response.json();\n      console.log(result);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"CreatePost\",\n      children: \"Create A Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), !post.isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setPostId(post._id),\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => deletePosts(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(Posts, \"X6mjf/w2X26pG8PLb9LvJbnNlKY=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Link","Posts","token","BASE","posts","setPosts","getPosts","response","fetch","headers","result","json","console","log","data","err","deletePosts","postId","method","map","post","title","description","price","isAuthor","password","event","setPassword","target","value","setPostId","_id"],"sources":["C:/Users/User/Desktop/FSA/Phase 2/router/src/components/Posts.js"],"sourcesContent":["import {useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Posts({token}){\r\n    // return <div>Posts</div>\r\nconst BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\"\r\n    const[posts,setPosts]= useState([])\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n       async function getPosts(){\r\n            try{\r\n                const response = await fetch (`${BASE}/posts`,{\r\n\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                           'Authorization': `Bearer ${token}`\r\n                        },\r\n            })\r\n            let result = await response.json()\r\n                console.log(result)\r\n                setPosts(result.data.posts);\r\n                \r\n\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        getPosts()\r\n\r\n    },[])\r\n    \r\n    \r\n    async function deletePosts(postId){\r\n             try{\r\n                 const response = await fetch(`${BASE}/posts/${postId}`,{\r\n                     method:\"DELETE\",\r\n                     headers:{\r\n                        'Content-Type': 'application/json',\r\n                           'Authorization': `Bearer ${token}`\r\n                     }\r\n                 })\r\n                 let result = await response.json();\r\n                 console.log(result)\r\n                \r\n                    \r\n                 \r\n \r\n             }catch(err){\r\n                 console.log(err)\r\n             }\r\n         }\r\n         \r\n    \r\n         return(\r\n             <>\r\n       \r\n        <Link to=\"CreatePost\">Create A Listing</Link>\r\n        <>\r\n        \r\n        {posts.map(post=>{ \r\n            \r\n            return(\r\n                <div key={post._id} className=\"card\">\r\n                    <div>{post.title}</div>\r\n                    <div>{post.description}</div>\r\n                    <div>{post.price}</div>\r\n\r\n                   { !post.isAuthor?\r\n                   <>\r\n                        <label>Message:</label>\r\n                        <input type=\"password\" value={password} onChange=\r\n                        {(event)=>setPassword(event.target.value)}></input>\r\n                        <button type=\"submit\">Login</button>\r\n                       <button type=\"button\"onClick={()=>setPostId(post._id)}>Message</button>\r\n                    </>\r\n                       :\r\n                       \r\n                       <button type=\"button\"onClick={()=>deletePosts(post._id)}>Delete</button>\r\n                }\r\n                   \r\n                    \r\n                </div>\r\n\r\n            )\r\n        })}\r\n        </>\r\n        </>\r\n        )\r\n        \r\n    }\r\n\r\n\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAKxC,eAAe,SAASC,KAAK,OAAS;EAAA;EAAA,IAAR;IAACC;EAAK,CAAC;EACjC;EACJ,MAAMC,IAAI,GAAG,+DAA+D;EACxE,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EAInCC,SAAS,CAAC,MAAI;IACX,eAAeO,QAAQ,GAAE;MACpB,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,GAAEL,IAAK,QAAO,EAAC;UAE1CM,OAAO,EAAC;YACJ,cAAc,EAAE,kBAAkB;YAC/B,eAAe,EAAG,UAASP,KAAM;UACpC;QACZ,CAAC,CAAC;QACF,IAAIQ,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAC9BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QACnBL,QAAQ,CAACK,MAAM,CAACI,IAAI,CAACV,KAAK,CAAC;MAG/B,CAAC,QAAMW,GAAG,EAAC;QACPH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB;IACJ;IACAT,QAAQ,EAAE;EAEd,CAAC,EAAC,EAAE,CAAC;EAGL,eAAeU,WAAW,CAACC,MAAM,EAAC;IACzB,IAAG;MACC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,IAAK,UAASc,MAAO,EAAC,EAAC;QACnDC,MAAM,EAAC,QAAQ;QACfT,OAAO,EAAC;UACL,cAAc,EAAE,kBAAkB;UAC/B,eAAe,EAAG,UAASP,KAAM;QACvC;MACJ,CAAC,CAAC;MACF,IAAIQ,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAKvB,CAAC,QAAMK,GAAG,EAAC;MACPH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB;EACJ;EAGA,oBACI;IAAA,wBAEL,QAAC,IAAI;MAAC,EAAE,EAAC,YAAY;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAO,eAC7C;MAAA,UAECX,KAAK,CAACe,GAAG,CAACC,IAAI,IAAE;QAEb,oBACI;UAAoB,SAAS,EAAC,MAAM;UAAA,wBAChC;YAAA,UAAMA,IAAI,CAACC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,eACvB;YAAA,UAAMD,IAAI,CAACE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAO,eAC7B;YAAA,UAAMF,IAAI,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,EAEtB,CAACH,IAAI,CAACI,QAAQ,gBAChB;YAAA,wBACK;cAAA,UAAO;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,eACvB;cAAO,IAAI,EAAC,UAAU;cAAC,KAAK,EAAEC,QAAS;cAAC,QAAQ,EAC9CC,KAAK,IAAGC,WAAW,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAS,eACnD;cAAQ,IAAI,EAAC,QAAQ;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAS,eACrC;cAAQ,IAAI,EAAC,QAAQ;cAAA,OAAO,EAAE,MAAIC,SAAS,CAACV,IAAI,CAACW,GAAG,CAAE;cAAA,UAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA,gBACvE,gBAGA;YAAQ,IAAI,EAAC,QAAQ;YAAA,OAAO,EAAE,MAAIf,WAAW,CAACI,IAAI,CAACW,GAAG,CAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,GAfrEX,IAAI,CAACW,GAAG;UAAA;UAAA;UAAA;QAAA,QAmBZ;MAGd,CAAC;IAAC,iBACC;EAAA,gBACA;AAGP;AAAC,GAxFmB9B,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}