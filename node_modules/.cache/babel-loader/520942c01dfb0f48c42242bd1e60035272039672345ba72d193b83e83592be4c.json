{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FSA\\\\Phase 2\\\\router\\\\src\\\\components\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\";\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(\"\");\n  useEffect(() => {\n    async function createPosts() {\n      try {\n        const response = await fetch(`${BASE}/posts`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          method: \"POST\",\n          body: JSON.stringify({\n            post: {\n              title: title,\n              description: description,\n              price: \"$480.00\",\n              willDeliver: true\n            }\n          })\n        });\n\n        // let result = await response.json({    \n\n        //     })\n\n        //  });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    createPosts();\n  }, []);\n\n  //  return(\n  //         <form>\n  //             <label for=\"title\">Title:</label>\n  //             <input type=\"text\" name=\"title\"/>\n  //             <label for=\"description\">Description:</label>\n  //             <input type=\"text\" name=\"description\"/>\n  //             <label for=\"price\">Price:</label>\n  //             <input type=\"text\"name=\"price\"/>\n  //             <label for=\"willDeliver\">Will Deliver?</label>\n  //             <input type=\"checkbox\"></input>\n  //             <button type=\"submit\">Submit</button>\n  //         </form>\n  //  )\n\n  return (\n    /*#__PURE__*/\n    //create a login form \n    _jsxDEV(\"form\", {\n      onSubmit: event => newPost(event),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Will Deliver?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: willDeliver,\n        onChange: event => setWillDeliver(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(CreatePost, \"pOtEe0K6OnoLn3VVlsTiq4bhnls=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","useEffect","CreatePost","BASE","title","setTitle","description","setDescription","price","setPrice","willDeliver","setWillDeliver","createPosts","response","fetch","headers","token","method","body","JSON","stringify","post","err","console","log","event","newPost","target","value"],"sources":["C:/Users/User/Desktop/FSA/Phase 2/router/src/components/CreatePost.js"],"sourcesContent":["import {useState,useEffect} from \"react\";\r\n\r\nexport default function CreatePost(){\r\n    const BASE = \"https://strangers-things.herokuapp.com/api/2211-ftb-ct-web-pt\"\r\n    const[title,setTitle]=useState(\"\")\r\n    const[description,setDescription]=useState(\"\")\r\n    const[price,setPrice]=useState(\"\")\r\n    const[willDeliver,setWillDeliver]=useState(\"\")\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function createPosts(){\r\n             try{\r\n                 const response = await fetch(`${BASE}/posts`,{\r\n\r\n                     headers:{\r\n                         'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`\r\n                         },\r\n                         method:\"POST\",\r\n                         body: JSON.stringify({\r\n                            post: {\r\n                              title: title,\r\n                              description: description,\r\n                              price: \"$480.00\",\r\n                              willDeliver: true\r\n                            }})\r\n\r\n                    })\r\n\r\n                // let result = await response.json({    \r\n                       \r\n                //     })\r\n\r\n            //  });\r\n                \r\n             }catch(err){\r\n                 console.log(err)\r\n             }\r\n         }\r\n         createPosts()\r\n     },[])\r\n    \r\n  \r\n    //  return(\r\n    //         <form>\r\n    //             <label for=\"title\">Title:</label>\r\n    //             <input type=\"text\" name=\"title\"/>\r\n    //             <label for=\"description\">Description:</label>\r\n    //             <input type=\"text\" name=\"description\"/>\r\n    //             <label for=\"price\">Price:</label>\r\n    //             <input type=\"text\"name=\"price\"/>\r\n    //             <label for=\"willDeliver\">Will Deliver?</label>\r\n    //             <input type=\"checkbox\"></input>\r\n    //             <button type=\"submit\">Submit</button>\r\n    //         </form>\r\n    //  )\r\n\r\n     return(\r\n        //create a login form \r\n        <form onSubmit={(event)=>newPost(event)}>\r\n            <label>Title:</label>\r\n            <input type=\"text\" value={title} onChange=\r\n            {(event)=>setTitle(event.target.value)}></input>\r\n\r\n            <label>Description:</label>\r\n            <input type=\"text\" value={description} onChange=\r\n            {(event)=>setDescription(event.target.value)}></input>\r\n\r\n            <label>Price:</label>\r\n            <input type=\"text\" value={price} onChange=\r\n            {(event)=>setPrice(event.target.value)}></input>\r\n\r\n            <label>Will Deliver?</label>\r\n            <input type=\"checkbox\" value={willDeliver} onChange=\r\n            {(event)=>setWillDeliver(event.target.value)}></input>\r\n            <button type=\"submit\">submit</button>\r\n        </form>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC;AAEzC,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC,MAAMC,IAAI,GAAG,+DAA+D;EAC5E,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACL,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACM,WAAW,EAACC,cAAc,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAK,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACU,WAAW,EAACC,cAAc,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAI9CC,SAAS,CAAC,MAAI;IACV,eAAeW,WAAW,GAAE;MACvB,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,IAAK,QAAO,EAAC;UAEzCY,OAAO,EAAC;YACJ,cAAc,EAAE,kBAAkB;YAC/B,eAAe,EAAG,UAASC,KAAM;UACpC,CAAC;UACDC,MAAM,EAAC,MAAM;UACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAClBC,IAAI,EAAE;cACJjB,KAAK,EAAEA,KAAK;cACZE,WAAW,EAAEA,WAAW;cACxBE,KAAK,EAAE,SAAS;cAChBE,WAAW,EAAE;YACf;UAAC,CAAC;QAEV,CAAC,CAAC;;QAEN;;QAEA;;QAEJ;MAEC,CAAC,QAAMY,GAAG,EAAC;QACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ;IACAV,WAAW,EAAE;EACjB,CAAC,EAAC,EAAE,CAAC;;EAGN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEC;IAAA;IACG;IACA;MAAM,QAAQ,EAAGa,KAAK,IAAGC,OAAO,CAACD,KAAK,CAAE;MAAA,wBACpC;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAErB,KAAM;QAAC,QAAQ,EACvCqB,KAAK,IAAGpB,QAAQ,CAACoB,KAAK,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAEhD;QAAA,UAAO;MAAY;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEtB,WAAY;QAAC,QAAQ,EAC7CmB,KAAK,IAAGlB,cAAc,CAACkB,KAAK,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAEtD;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEpB,KAAM;QAAC,QAAQ,EACvCiB,KAAK,IAAGhB,QAAQ,CAACgB,KAAK,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAEhD;QAAA,UAAO;MAAa;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC5B;QAAO,IAAI,EAAC,UAAU;QAAC,KAAK,EAAElB,WAAY;QAAC,QAAQ,EACjDe,KAAK,IAAGd,cAAc,CAACc,KAAK,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eACtD;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC;AAGf;AAAC,GA/EuB1B,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}